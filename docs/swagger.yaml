basePath: /
definitions:
  domain.Comment:
    properties:
      content:
        type: string
      date:
        type: string
      id:
        type: integer
      posts-id:
        type: integer
      users-id:
        type: integer
    required:
    - content
    - date
    - id
    - posts-id
    - users-id
    type: object
  domain.CommentCreateInput:
    properties:
      content:
        type: string
    type: object
  domain.CommentUpdateInput:
    properties:
      content:
        type: string
    type: object
  domain.Post:
    properties:
      comments:
        items:
          $ref: '#/definitions/domain.Comment'
        type: array
      content:
        type: string
      date:
        type: string
      id:
        type: integer
      title:
        type: string
      users-id:
        type: integer
    required:
    - content
    - date
    - id
    - users-id
    type: object
  domain.PostUpdateInput:
    properties:
      content:
        type: string
      title:
        type: string
    type: object
  domain.User:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      surname:
        type: string
    required:
    - email
    - name
    type: object
  handler.createPostInput:
    properties:
      content:
        type: string
      title:
        type: string
    type: object
  handler.errorResponse:
    properties:
      message:
        type: string
    type: object
  handler.postsCommentsResponse:
    properties:
      comments:
        items:
          $ref: '#/definitions/domain.Comment'
        type: array
      count:
        type: integer
    type: object
  handler.refreshInput:
    properties:
      refreshToken:
        type: string
    required:
    - refreshToken
    type: object
  handler.signInInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handler.signInResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  handler.statusResponse:
    properties:
      status:
        type: string
    type: object
  handler.usersPostsResponse:
    properties:
      count:
        type: integer
      posts:
        items:
          $ref: '#/definitions/domain.Post'
        type: array
    type: object
info:
  contact:
    email: iam@it-yaroslav.ru
    name: Yaroslav Molodcov
  description: API Server for Grates social network app
  title: Grates API
  version: "1.0"
paths:
  /api/posts:
    post:
      consumes:
      - application/json
      description: Create new post
      operationId: create-post
      parameters:
      - description: post info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.createPostInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create
      tags:
      - posts
  /api/posts/{postId}:
    delete:
      consumes:
      - application/json
      description: Delete post by id
      operationId: delete-post
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - posts
    get:
      consumes:
      - application/json
      description: Get post by id
      operationId: get-post
      parameters:
      - description: post id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: post info
          schema:
            $ref: '#/definitions/domain.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get
      tags:
      - posts
    put:
      consumes:
      - application/json
      description: Update post body
      operationId: update-post
      parameters:
      - description: new post data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.PostUpdateInput'
      - description: post id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update
      tags:
      - posts
  /api/posts/{postId}/comments:
    get:
      consumes:
      - application/json
      description: Get post's comments
      operationId: posts-comments
      parameters:
      - description: post id
        in: path
        name: postId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: comments info
          schema:
            $ref: '#/definitions/handler.postsCommentsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetPostsComments
      tags:
      - comments
    post:
      consumes:
      - application/json
      description: Create new comment
      operationId: create-comment
      parameters:
      - description: comment info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.CommentCreateInput'
      - description: post id
        in: path
        name: postId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateComment
      tags:
      - comments
  /api/posts/users/{userId}:
    patch:
      consumes:
      - application/json
      description: Get user's posts
      operationId: users-posts
      parameters:
      - description: user's id
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: post info
          schema:
            $ref: '#/definitions/handler.usersPostsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetUsersPosts
      tags:
      - posts
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: refresh access and refresh tokens
      operationId: refresh-tokens
      parameters:
      - description: refresh token
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.refreshInput'
      produces:
      - application/json
      responses:
        "200":
          description: tokens
          schema:
            $ref: '#/definitions/handler.signInResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: RefreshTokens
      tags:
      - auth
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: authenticate account
      operationId: login-account
      parameters:
      - description: account credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.signInInput'
      produces:
      - application/json
      responses:
        "200":
          description: tokens
          schema:
            $ref: '#/definitions/handler.signInResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: create account
      operationId: create-account
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignUp
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
