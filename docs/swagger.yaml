basePath: /
definitions:
  domain.Comment:
    properties:
      content:
        type: string
      date:
        type: string
      id:
        type: integer
      posts-id:
        type: integer
      users-id:
        type: integer
    required:
    - content
    - date
    - id
    - posts-id
    - users-id
    type: object
  domain.CommentCreateInput:
    properties:
      content:
        type: string
    type: object
  domain.CommentUpdateInput:
    properties:
      content:
        type: string
    type: object
  domain.Post:
    properties:
      comments:
        items:
          $ref: '#/definitions/domain.Comment'
        type: array
      content:
        example: Occaecat quis officia pariatur non aliquip culpa id elit amet sit
          occaecat ex sunt ullamco duis reprehenderit in esse. Culpa minim nulla pariatur
          voluptate ea proident dolor velit eu do labore ut.
        type: string
      date:
        example: "2021-01-01T00:00:00Z"
        type: string
      id:
        example: 732436
        type: integer
      likes-count:
        type: integer
      title:
        example: Post title
        type: string
      users-id:
        example: 6296
        type: integer
    required:
    - content
    - date
    - id
    - users-id
    type: object
  domain.PostUpdateInput:
    properties:
      content:
        type: string
      title:
        type: string
    type: object
  domain.User:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      surname:
        type: string
    required:
    - email
    - name
    type: object
  handler.createPostInput:
    properties:
      content:
        type: string
      title:
        type: string
    type: object
  handler.errorResponse:
    properties:
      message:
        type: string
    type: object
  handler.postsCommentsResponse:
    properties:
      comments:
        items:
          $ref: '#/definitions/domain.Comment'
        type: array
      count:
        type: integer
    type: object
  handler.refreshInput:
    properties:
      refreshToken:
        type: string
    required:
    - refreshToken
    type: object
  handler.signInInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handler.signInResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  handler.statusResponse:
    properties:
      status:
        type: string
    type: object
  handler.usersPostsResponse:
    properties:
      count:
        type: integer
      posts:
        items:
          $ref: '#/definitions/domain.Post'
        type: array
    type: object
info:
  contact:
    email: iam@it-yaroslav.ru
    name: Yaroslav Molodcov
  description: API Server for Grates social network app
  title: Grates API
  version: "1.0"
paths:
  /api/comment/{commentId}:
    delete:
      consumes:
      - application/json
      description: Delete comment by id
      operationId: delete-comment
      parameters:
      - description: comment id
        in: path
        name: commentId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteComment
      tags:
      - comments
    patch:
      consumes:
      - application/json
      description: Update comment body
      operationId: update-comment
      parameters:
      - description: new comment data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.CommentUpdateInput'
      - description: comment id
        in: path
        name: commentId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateComment
      tags:
      - comments
  /api/posts:
    post:
      consumes:
      - application/json
      description: Create new post
      operationId: create-post
      parameters:
      - description: post info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.createPostInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreatePost
      tags:
      - posts
  /api/posts/:
    get:
      consumes:
      - application/json
      description: GetWithAdditions user's posts
      operationId: users-posts
      parameters:
      - description: user's id
        in: query
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: post info
          schema:
            $ref: '#/definitions/handler.usersPostsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetUsersPosts
      tags:
      - posts
  /api/posts/{postId}:
    delete:
      consumes:
      - application/json
      description: Delete post by id
      operationId: delete-post
      parameters:
      - description: post id
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeletePost
      tags:
      - posts
    get:
      consumes:
      - application/json
      description: GetWithAdditions post by id
      operationId: get-post
      parameters:
      - description: post id
        in: path
        name: postId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: post info
          schema:
            $ref: '#/definitions/domain.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetPost
      tags:
      - posts
    patch:
      consumes:
      - application/json
      description: Update post body
      operationId: update-post
      parameters:
      - description: new post data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.PostUpdateInput'
      - description: post id
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdatePost
      tags:
      - posts
  /api/posts/{postId}/comments:
    get:
      consumes:
      - application/json
      description: GetWithAdditions post's comments
      operationId: posts-comments
      parameters:
      - description: post id
        in: path
        name: postId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: comments info
          schema:
            $ref: '#/definitions/handler.postsCommentsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetPostsComments
      tags:
      - comments
    post:
      consumes:
      - application/json
      description: Create new comment
      operationId: create-comment
      parameters:
      - description: comment info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.CommentCreateInput'
      - description: post id
        in: path
        name: postId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateComment
      tags:
      - comments
  /api/posts/{postId}/dislike:
    post:
      consumes:
      - application/json
      description: Dislike post
      operationId: dislike-post
      parameters:
      - description: post id
        in: path
        name: postId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: DislikePost
      tags:
      - likes
  /api/posts/{postId}/like:
    post:
      consumes:
      - application/json
      description: Like post
      operationId: like-post
      parameters:
      - description: post id
        in: path
        name: postId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: LikePost
      tags:
      - likes
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: refresh access and refresh tokens
      operationId: refresh-tokens
      parameters:
      - description: refresh token
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.refreshInput'
      produces:
      - application/json
      responses:
        "200":
          description: tokens
          schema:
            $ref: '#/definitions/handler.signInResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: RefreshTokens
      tags:
      - auth
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: authenticate account
      operationId: login-account
      parameters:
      - description: account credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.signInInput'
      produces:
      - application/json
      responses:
        "200":
          description: tokens
          schema:
            $ref: '#/definitions/handler.signInResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: create account
      operationId: create-account
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignUp
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
